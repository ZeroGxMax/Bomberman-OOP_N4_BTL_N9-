Giải thích về code:
- Game application: game.BombermanGame
  +, Thành phần chính: Entities và Still Objects, trong đó Entities là các thực thể động, cần add theo cách đặc biệt (tránh làm nhòe hình ảnh).
  +, Window của game được tạo thành từ: Canvas, Group
  +, AnimationTimer đóng vai trò như là game loop, sau mỗi lần, game được render và update lại.
- Map:
  +, Map có 3 hàm chính: createMap(), renderMap(), updateMap().
  +, createMap(): Các entities và still objects được nhập từ file "src/levels/Level1.txt"
  +, Scan ký tự để tạo thực thể.
- Entities:
  +, Chia làm Animate và Still
  +, Các thực thể Animate để add vào entities list (trong map và main)
  +, Các thực thể Still để add vào still object list (trong map và main)
  
  *) Chú thích về việc khiến cho các thực thể động:
  +, Sử dụng function movingSprite trong graphics/Sprite.java
  +, Cây thừa kế: Entity -> AnimateEntity -> Mob -> Enemy -> Ballon/Oneal.
  +, Entity: 
      * Sử dụng hàm gc.drawImage(image, x, y) để render hình ảnh mới nhất.
  +, AnimateEntity:
      * Tạo data member animate cho thực thể (để truyền vào hàm movingSprite).
      * Tạo function goAnimate() để thay đổi animate theo thời gian.
  +, Mob:
      * Tạo data member direction cho thực thể (trong constants có đấy).
      * Tạo hai hàm abstract: calculateMove() và move() -> để thay đổi sự di chuyển dựa trên tính toán
  +, Enemy:
      * Sử dụng hàm override lại hàm render, sử dụng drawImage như cũ.
      * Override lại các hàm calculateMove() và move()
      * Tạo hàm abstract chooseSprite(): 
  +, Ballon:
      * Override lại hàm chooseSprite() -> Dựa theo direction để xác định hình ảnh hiện tại.

  *) Chú thích về việc lấy giá trị từ bàn phím:
  +, Cài đặt scene cho lớp KeyBoardInput tại hàm main (trog Bomberman.java)

  *) Chú thích về việc khiến bomber di chuyển:
    +, Thêm 2 biến xUnit và yUnit trong lớp Entity để lưu giá trị tọa dộ trong map.
    +, Trong class Map
        *, Thêm mảng 2 chiều _map (những nơi bomber có thể bước lên có giá trị 1, ngược lại là 0)
        *, Thêm phương thức isCanStepOn().
    +, Sử dụng setDirection() và calculateMove() để di chuyển nhân vật.
  *) Items
      +, Kế thừa StillObject
      +, Yêu cầu ghi đè hàm setPowerUp()(Chức năng của item) tại các lớp con.
    
*) Vấn đề:
- Quái không thể chuyển hướng giữa đường.
